version: '3.8'
services:

################
#     Auth     #
################
  artifacttoolkit-auth:
    networks:
      - atk-net
    build:
      context: ./artifacttoolkit-auth
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: atk-auth
    ports:
      - "${SSH_PORT:-2222}:2222"
    volumes:
      - atk-auth-opt:/opt

################
#    Nessus    #
################
  artifacttoolkit-nessus:
    networks:
      - atk-net
    build:
      context: ./artifacttoolkit-nessus
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: atk-nessus
    environment:
      - USERNAME=${NESSUS_USER:-admin}
      - PASSWORD=${NESSUS_PASSWORD:-changeme}
    volumes:
      - atk-nessus-data:/opt/nessus

################
#    Ingest    #
################
  artifacttoolkit-ingest:
    networks:
      - atk-net
    build:
      context: ./artifacttoolkit-ingest
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: atk-ingest
    environment:
      - INGEST_HTTPS=${INGEST_HTTPS:-8080}
    ports:
      - "${INGEST_HTTP:-8080}:80"
      - "${INGEST_HTTPS:-8443}:443"
    volumes:
      - atk-ingest-data:/var/www

###############
#  Bloohound  #
###############
  app-db:
    networks:
      - atk-net
    image: docker.io/library/postgres:13.2
    container_name: atk-bh-db
    environment:
      - POSTGRES_USER=${BH_POSTGRES_USER:-bloodhound}
      - POSTGRES_PASSWORD=${BH_POSTGRES_PASSWORD:-bloodhoundcommunityedition}
      - POSTGRES_DATABASE=${BH_POSTGRES_DATABASE:-bloodhound}
    volumes:
      - atk-bh-psql-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${BH_POSTGRES_USER:-bloodhound} -d ${BH_POSTGRES_DATABASE:-bloodhound} -h 127.0.0.1 -p 5432"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  graph-db:
    networks:
      - atk-net
    image: docker.io/library/neo4j:4.4
    container_name: atk-bh-graph-db
    environment:
      - NEO4J_AUTH=${BH_NEO4J_AUTH:-neo4j/bloodhoundcommunityedition}
      - NEO4J_dbms_allow__upgrade=${BH_NEO4J_ALLOW_UPGRADE:-true}
    volumes:
      - atk-bh-neo4j-data:/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -O /dev/null -q http://localhost:${NEO4J_WEB_PORT:-7474} || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  bloodhound:
    networks:
      - atk-net
    image: docker.io/specterops/bloodhound:${BLOODHOUND_TAG:-latest}
    container_name: atk-bh
    environment:
      - bhe_disable_cypher_qc=${BHE_DISABLE_CYPHER_QC:-false}
    #ports:
    #  - ${BH_PORT:-8081}:8080
    depends_on:
      app-db:
        condition: service_healthy
      graph-db:
        condition: service_healthy

###############
#  Keycloak   #
###############
  postgres:
    networks:
      - atk-net
    image: postgres:latest
    container_name: atk-kc-db
    volumes:
      - atk-cloak-psql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KC_PSQL_DB:-keycloak}
      POSTGRES_USER: ${KC_PSQL_USER:-keycloak}
      POSTGRES_PASSWORD: ${KC_PSQL_PASSWORD:-password}
  
  keycloak:
    networks:
      - atk-net
    image: quay.io/keycloak/keycloak:legacy
    container_name: atk-kc
    environment:
      DB_VENDOR: ${KC_DB_VENDOR:-POSTGRES}
      DB_ADDR: ${KC_DB_ADDR:-atk-kc-db}
      DB_DATABASE: ${KC_DB:-keycloak}
      DB_USER: ${KC_DB_USER:-keycloak}
      DB_SCHEMA: ${KC_DB_SCHEMA:-public}
      DB_PASSWORD: ${KC_DB_PASSWORD:-password}
      KEYCLOAK_USER: ${KC_USER:-admin}
      KEYCLOAK_PASSWORD: ${KC_PASSWORD:-Pa55w0rd}
      KC_PROXY: ${KC_PROXY:-edge}
      KC_HOSTNAME_STRICT_HTTPS: ${KC_HOSTNAME_STRICT_HTTPS:-false}
      PROXY_ADDRESS_FORWARDING: true
#    ports:
#      - ${KC_HTTP:-18080}:8080
#      - ${KC_HTTPS:-18443}:8443
    depends_on:
      - postgres

###############
# Docker Svcs #
###############
volumes:
  atk-auth-opt:
  atk-nessus-data:
  atk-ingest-data:
  atk-bh-psql-data:
  atk-bh-neo4j-data:
  atk-cloak-psql-data:

networks:
  atk-net:
    driver: bridge

