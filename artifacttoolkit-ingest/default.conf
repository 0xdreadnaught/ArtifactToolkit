# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name _;
    location / {
        if ($host ~ ^(ingest\.atk|nessus\.atk)$) {
            return 301 https://$host:REPLACEINGESTPORT$request_uri;
        }
        return 403;
    }
}

# Handle HTTPS traffic for local proxy's index.html
server {
    listen 443 ssl;
    server_name ingest.atk;  # Replace with the actual domain/subdomain

    ssl_certificate /etc/nginx/ssl/wildcard_atk.crt;
    ssl_certificate_key /etc/nginx/ssl/wildcard_atk.key;

    # Add your SSL settings here (omitted for brevity)

    location / {
        root /var/www/html;
        index index.html;
    }
}

# Handle HTTPS traffic for Nessus proxy
server {
    listen 443 ssl;
    server_name nessus.atk;  # Replace with the actual domain/subdomain

    ssl_certificate /etc/nginx/ssl/wildcard_atk.crt;
    ssl_certificate_key /etc/nginx/ssl/wildcard_atk.key;

    location / {
        proxy_read_timeout 3600; # For large plugin updates with an active browser session
        proxy_pass https://atk-nessus:8834;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-for $remote_addr;
        proxy_set_header X-Forwarded-Proto http;
    }
}

# Handle HTTPS traffic for Nessus proxy
server {
    listen 443 ssl;
    server_name bloodhound.atk;  # Replace with the actual domain/subdomain

    ssl_certificate /etc/nginx/ssl/wildcard_atk.crt;
    ssl_certificate_key /etc/nginx/ssl/wildcard_atk.key;

    location / {
        proxy_read_timeout 3600; # For large plugin updates with an active browser session
        proxy_pass http://atk-bh:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-for $remote_addr;
        proxy_set_header X-Forwarded-Proto http;
    }
}

